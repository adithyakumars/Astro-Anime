---
const spinner = "./assets/spinner.svg";

import { useEffect, useState } from "react";
import { useInView } from "react-intersection-observer";
import AnimeCard, { AnimeProp } from "./AnimeCard.astro";

let page = 2;

const fetchAnime = async (page: number) => {
  const response = await fetch(`https://shikimori.one/api/animes?page=${page}&limit=8&order=popularity`);
  const data = await response.json();
  console.log(data);
  return data;
};

export default function LoadMore() {
  const { ref, inView } = useInView();
  const [data, setData ]= useState<AnimeProp[]>([]);

    useEffect(() => {
        if (inView) {
            fetchAnime(page).then((res) => {
                setData({ ...data, ...res });
                page++;
            });
        }
    }, [inView, data]);

  return (
    <>
      <section class="grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-10">
        {data().data.map((item, index) => (
          <AnimeCard key={item.id} anime={item} index={index} />
        ))}
      </section>
      <section class="flex justify-center items-center w-full">
        <div ref={ref}>
          <img
            src={spinner}
            alt="spinner"
            width={56}
            height={56}
            class="object-contain"
          />
        </div>
      </section>
    </>
  );
}
---

<!-- main code -->
<!-- ---
const spinner = "./assets/spinner.svg";

// import React, { useEffect, useState } from "react";
import { useInView } from "react-intersection-observer";
import AnimeCard, { AnimeProp } from "./AnimeCard.astro";


const fetchAnime = async (page: number) => {
    const response = await fetch(`https://shikimori.one/api/animes?page=${page}&limit=8&order=popularity`);
    const data = await response.json();
    console.log(data);
   	return data;
}


const { ref, inView } = useInView();
const [data, setData] = useState<AnimeProp[]>([]);

useEffect(() => {
    if(inView) {
        fetchAnime(2).then((res) => {
            setData([...data, ...res]);
        });
    }
}, [inView, data]);
---

<section class="grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-10">
    {data.map((item: AnimeProp, index: number) => (
        <AnimeCard key={item.id} anime={item} index={index} />
    ))}
</section>
<section class="flex justify-center items-center w-full">
    <div ref={ref}>
        <img
            src={spinner}
            alt="spinner"
            width={56}
            height={56}
            class="object-contain"
        />
    </div>
  </section> -->
  